extends layout

block content

  nav#mainmenu.navbar.navbar-expand-lg.bg-body-tertiary
    .container-fluid
      a.navbar-brand#add-cube(href="#") Add Cube

  a-scene(persistent-p2p networked-scene="room: basic; debug: true; adapter: wseasyrtc;")
  
    a-assets
      //- img(id="skyTexture" src="https://cdn.aframe.io/360-image-gallery-boilerplate/img/sechelt.jpg")
      img(id="skyTexture" src="/images/background.png")
      img(id="groundTexture" src="https://cdn.aframe.io/a-painter/images/floor.jpg")

      //- Templates
      //- Camera Rig / Player
      //- template(id="rig-template")
      //-   a-entity

      //- Head / Avatar // a few spheres make a head + eyes + pupils
      template(id="avatar-template")
        a-entity(class="avatar")
          //- notice this child sphere, with class .head, has the random-color component; this modifies the material component's color property
          a-sphere(class="head" scale="0.2 0.22 0.2" random-color)
          a-entity(class="face" position="0 0.05 0")
            //- eye 1
            a-sphere(class="eye" color="white" position="0.06 0.05 -0.16" scale="0.04 0.04 0.04")
              a-sphere(class="pupil" color="black" position="0 0 -1" scale="0.2 0.2 0.2")
            //- eye 2
            a-sphere(class="eye" color="white" position="-0.06 0.05 -0.16" scale="0.04 0.04 0.04")
              a-sphere(class="pupil" color="black" position="0 0 -1" scale="0.2 0.2 0.2")
      
      template(id="my-cube")
        a-entity(geometry="primitive:box" material="color:red" mycube)
    
    //- a-entity(position="1 0 0" networked="template:#my-cube")

    //- Here we declare only the local user's avatar, which we then broadcast to other users
    a-entity(id="rig")
      //- Here we add the camera.
      a-entity(
        id="player"
        camera
        position="0 2.5 0"
        spawn-in-circle="radius:3"
        look-controls
        wasd-controls
        networked="template:#avatar-template;attachTemplateToLocal:false;"
        visible="false"
      )
        a-sphere.head(visible="false" random-color)

    //- environment
    a-entity(
      environment="preset: tron; skyColor: #fff"
    )

  script.
    function onConnect() {
      console.log('onConnect', new Date());
    }

  //- TESt
  script.
    function getRandomFloat(min, max) {
      return Math.random() * (max - min) + min;
    }

    const addcube = document.querySelector("#add-cube");
    addcube.addEventListener('click', function(){
      var position = getRandomFloat(-5,5,1)+" "+getRandomFloat(-5,5,1)+""+getRandomFloat(-5,5,1);

      const scene = document.querySelector('a-scene');
      const box =  document.createElement("a-entity");
      
      box.setAttribute('mycube','');  
      box.setAttribute('position',position);
      box.setAttribute('networked', {persistent: true, template: '#my-cube'})
      
      scene.append(box);

      NAF.utils.getNetworkedEntity(box).then((networkedEl) => {
        document.body.dispatchEvent(new CustomEvent('persistentEntityCreated'));
      });


    });

  //- BOOTSTRAP
  script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js", integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN", crossorigin="anonymous") 